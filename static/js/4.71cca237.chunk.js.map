{"version":3,"sources":["components/GalleryPano.js","components/GalleryPhoto.js","components/Pagination.js","components/ProjetDetails.js"],"names":["GalleryPano","images","Row","className","map","img","Col","xs","xl","key","uuid","width","height","image","src","pitch","yaw","hfov","showControls","disableKeyboardCtrl","mouseZoom","autoLoad","autoRotate","defaultProps","GalleryPhoto","useState","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","useCallback","event","index","photos","onClick","onClose","currentIndex","views","x","srcset","srcSet","caption","title","Pagination","currentId","lastProject","PROJECTS_LIST","filter","p","id","Number","nextProject","to","path","smooth","ProjetDetails","projectDetails","year","category","website","tags","description","type","Container","lg","parse","href","url","name","length","t"],"mappings":"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","file":"static/js/4.71cca237.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport uuid from \"react-uuid\";\n\nimport { Row, Col } from \"reactstrap\";\nimport { Pannellum } from \"pannellum-react\";\n\nexport default function GalleryPano({ images }) {\n  return (\n    <Row className=\"justify-content-center\">\n      {images.map((img) => (\n        <Col xs=\"10\" xl=\"6\" className=\"p-1\" key={uuid()}>\n          <Pannellum\n            width=\"100%\"\n            height=\"320px\"\n            image={img.src}\n            pitch={0}\n            yaw={img.yaw}\n            hfov={70}\n            showControls={false}\n            disableKeyboardCtrl\n            mouseZoom={false}\n            autoLoad\n            autoRotate={2}\n          />\n        </Col>\n      ))}\n    </Row>\n  );\n}\n\nGalleryPano.defaultProps = {\n  images: [],\n};\n\nGalleryPano.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      yaw: PropTypes.number,\n    })\n  ),\n};\n","import React, { useState, useCallback } from \"react\";\nimport Gallery from \"react-photo-gallery\";\nimport { Row, Col } from \"reactstrap\";\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\nimport PropTypes from \"prop-types\";\n\nexport default function GalleryPhoto({ images }) {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n\n  const openLightbox = useCallback((event, { index }) => {\n    setCurrentImage(index);\n    setViewerIsOpen(true);\n  }, []);\n\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setViewerIsOpen(false);\n  };\n\n  const photos = images.map((img) => {\n    return { src: img.src, width: img.width, height: img.height };\n  });\n\n  return (\n    <Row>\n      <Col>\n        <Gallery photos={photos} onClick={openLightbox} />\n        <ModalGateway>\n          {viewerIsOpen ? (\n            <Modal onClose={closeLightbox}>\n              <Carousel\n                currentIndex={currentImage}\n                views={photos.map((x) => ({\n                  ...x,\n                  srcset: x.srcSet,\n                  caption: x.title,\n                }))}\n              />\n            </Modal>\n          ) : null}\n        </ModalGateway>\n      </Col>\n    </Row>\n  );\n}\n\nGalleryPhoto.defaultProps = {\n  images: [],\n};\n\nGalleryPhoto.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    })\n  ),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport PROJECTS_LIST from \"./helpers/projectsList\";\n\nexport default function Pagination({ currentId }) {\n  const lastProject = PROJECTS_LIST.filter(\n    (p) => p.id === Number(currentId + 1)\n  );\n  const nextProject = PROJECTS_LIST.filter(\n    (p) => p.id === Number(currentId - 1)\n  );\n  return (\n    <div>\n      <Row className=\"justify-content-center mt-5\">\n        <Col xs=\"auto\">\n          {lastProject[0] && (\n            <Link\n              to={`${lastProject[0].path}`}\n              className=\"link-switch-project hvr-sweep-to-left\"\n              smooth=\"true\"\n            >\n              Projet\n              <br />\n              précédent\n            </Link>\n          )}\n          {nextProject[0] && (\n            <Link\n              to={`${nextProject[0].path}`}\n              className=\"link-switch-project hvr-sweep-to-right\"\n              smooth=\"true\"\n            >\n              Projet\n              <br />\n              suivant\n            </Link>\n          )}\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nPagination.defaultProps = {\n  currentId: 0,\n};\n\nPagination.propTypes = {\n  currentId: PropTypes.number,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport parse from \"html-react-parser\";\nimport GalleryPano from \"./GalleryPano\";\nimport GalleryPhoto from \"./GalleryPhoto\";\nimport Pagination from \"./Pagination\";\nimport \"../scss/ProjetDetails.scss\";\n\nexport default function ProjetDetails({ projectDetails }) {\n  const {\n    id,\n    title,\n    year,\n    category,\n    website,\n    tags,\n    description,\n    type,\n    images,\n  } = projectDetails;\n\n  return (\n    <Container className=\"details-projet-container\">\n      <Row>\n        <Col xs=\"auto\">\n          <h1 className=\"title-details-projet\">{title}</h1>\n        </Col>\n      </Row>\n      <Row className=\"text-details-projet justify-content-center\">\n        <Col xs=\"12\" lg=\"7\" className=\"pb-4\">\n          {parse(description)}\n        </Col>\n        <Col xs=\"12\" lg=\"4\" className=\"offset-lg-1\">\n          <Col xs=\"12\" className=\"p-0\">\n            <p>Année : {year}</p>\n          </Col>\n          <Col xs=\"12\" className=\"p-0\">\n            <p>Catégorie : {category}</p>\n          </Col>\n          <Col xs=\"12\" className=\"p-0\">\n            <a href={website.url} className=\"link-unstyled\">\n              {website.name}\n            </a>\n          </Col>\n          <Row className=\"align-items-center mt-4\">\n            {tags.length &&\n              tags.map((t) => (\n                <Col xs=\"auto\" className=\"p-2\" key={t}>\n                  <p className=\"label-stack\">{t}</p>\n                </Col>\n              ))}\n          </Row>\n        </Col>\n      </Row>\n      {type ? (\n        <Container className=\"p-0\">\n          <GalleryPano images={images} />\n        </Container>\n      ) : (\n        <Container>\n          <GalleryPhoto images={images} />\n        </Container>\n      )}\n      <Pagination currentId={id} />\n    </Container>\n  );\n}\n\nProjetDetails.defaultProps = {\n  projectDetails: [],\n};\n\nProjetDetails.propTypes = {\n  projectDetails: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    year: PropTypes.string,\n    category: PropTypes.string,\n    website: PropTypes.shape({\n      name: PropTypes.string,\n      url: PropTypes.string,\n    }),\n    tags: PropTypes.arrayOf(PropTypes.string),\n    description: PropTypes.string,\n    type: PropTypes.string,\n    images: PropTypes.PropTypes.arrayOf(\n      PropTypes.shape({\n        src: PropTypes.string,\n        width: PropTypes.number,\n        height: PropTypes.number,\n      })\n    ),\n  }),\n};\n"],"sourceRoot":""}