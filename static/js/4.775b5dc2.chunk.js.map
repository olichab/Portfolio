{"version":3,"sources":["components/GalleryPhoto.js","components/Pagination.js","components/ProjetDetails.js"],"names":["GalleryPhoto","images","useState","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","useCallback","event","index","photos","map","img","src","width","height","onClick","onClose","currentIndex","views","x","srcset","srcSet","caption","title","defaultProps","Pagination","currentId","lastProject","PROJECTS_LIST","filter","p","id","Number","nextProject","Row","className","Col","xs","to","path","smooth","ProjetDetails","projectDetails","year","category","website","tags","description","type","Container","lg","parse","href","url","name","length","t","key"],"mappings":"+QAKe,SAASA,EAAT,GAAmC,IAAXC,EAAU,EAAVA,OAAU,EACPC,mBAAS,GADF,mBACxCC,EADwC,KAC1BC,EAD0B,OAEPF,oBAAS,GAFF,mBAExCG,EAFwC,KAE1BC,EAF0B,KAIzCC,EAAeC,uBAAY,SAACC,EAAD,GAAuB,IAAbC,EAAY,EAAZA,MACzCN,EAAgBM,GAChBJ,GAAgB,KACf,IAOGK,EAASV,EAAOW,KAAI,SAACC,GACzB,MAAO,CAAEC,IAAKD,EAAIC,IAAKC,MAAOF,EAAIE,MAAOC,OAAQH,EAAIG,WAGvD,OACE,oCACE,kBAAC,IAAD,CAASL,OAAQA,EAAQM,QAASV,IAClC,kBAAC,IAAD,KACGF,EACC,kBAAC,IAAD,CAAOa,QAdO,WACpBd,EAAgB,GAChBE,GAAgB,KAaR,kBAAC,IAAD,CACEa,aAAchB,EACdiB,MAAOT,EAAOC,KAAI,SAACS,GAAD,sBACbA,EADa,CAEhBC,OAAQD,EAAEE,OACVC,QAASH,EAAEI,cAIf,OAMZzB,EAAa0B,aAAe,CAC1BzB,OAAQ,I,oBCtCK,SAAS0B,EAAT,GAAoC,IAAdC,EAAa,EAAbA,UAC7BC,EAAcC,IAAcC,QAChC,SAACC,GAAD,OAAOA,EAAEC,KAAOC,OAAON,EAAY,MAE/BO,EAAcL,IAAcC,QAChC,SAACC,GAAD,OAAOA,EAAEC,KAAOC,OAAON,EAAY,MAErC,OACE,6BACE,kBAACQ,EAAA,EAAD,CAAKC,UAAU,+BACb,kBAACC,EAAA,EAAD,CAAKC,GAAG,QACLV,EAAY,IACX,kBAAC,OAAD,CACEW,GAAE,UAAKX,EAAY,GAAGY,MACtBJ,UAAU,wCACVK,OAAO,QAHT,SAME,6BANF,mBAUDP,EAAY,IACX,kBAAC,OAAD,CACEK,GAAE,UAAKL,EAAY,GAAGM,MACtBJ,UAAU,yCACVK,OAAO,QAHT,SAME,6BANF,cAgBZf,EAAWD,aAAe,CACxBE,UAAW,G,OCtCE,SAASe,EAAT,GAA4C,IAAnBC,EAAkB,EAAlBA,eAEpCX,EASEW,EATFX,GACAR,EAQEmB,EARFnB,MACAoB,EAOED,EAPFC,KACAC,EAMEF,EANFE,SACAC,EAKEH,EALFG,QACAC,EAIEJ,EAJFI,KACAC,EAGEL,EAHFK,YACAC,EAEEN,EAFFM,KACAjD,EACE2C,EADF3C,OAGF,OACE,kBAACkD,EAAA,EAAD,CAAWd,UAAU,4BACnB,kBAACD,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAKC,GAAG,QACN,wBAAIF,UAAU,wBAAwBZ,KAG1C,kBAACW,EAAA,EAAD,CAAKC,UAAU,8CACb,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKa,GAAG,IAAIf,UAAU,QAC3BgB,IAAMJ,IAET,kBAACX,EAAA,EAAD,CAAKC,GAAG,KAAKa,GAAG,IAAIf,UAAU,eAC5B,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKF,UAAU,OACrB,yCAAYQ,IAEd,kBAACP,EAAA,EAAD,CAAKC,GAAG,KAAKF,UAAU,OACrB,6CAAgBS,IAElB,kBAACR,EAAA,EAAD,CAAKC,GAAG,KAAKF,UAAU,OACrB,uBAAGiB,KAAMP,EAAQQ,IAAKlB,UAAU,iBAC7BU,EAAQS,OAGb,kBAACpB,EAAA,EAAD,CAAKC,UAAU,2BACZW,EAAKS,QACJT,EAAKpC,KAAI,SAAC8C,GAAD,OACP,kBAACpB,EAAA,EAAD,CAAKC,GAAG,OAAOF,UAAU,MAAMsB,IAAKD,GAClC,uBAAGrB,UAAU,eAAeqB,UAM9B,SAATR,EAEC,mCAEA,kBAAClD,EAAD,CAAcC,OAAQA,IAExB,kBAAC0B,EAAD,CAAYC,UAAWK,KA7D7B,wCAkEAU,EAAcjB,aAAe,CAC3BkB,eAAgB","file":"static/js/4.775b5dc2.chunk.js","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport Gallery from \"react-photo-gallery\";\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\nimport PropTypes from \"prop-types\";\n\nexport default function GalleryPhoto({ images }) {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n\n  const openLightbox = useCallback((event, { index }) => {\n    setCurrentImage(index);\n    setViewerIsOpen(true);\n  }, []);\n\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setViewerIsOpen(false);\n  };\n\n  const photos = images.map((img) => {\n    return { src: img.src, width: img.width, height: img.height };\n  });\n\n  return (\n    <>\n      <Gallery photos={photos} onClick={openLightbox} />\n      <ModalGateway>\n        {viewerIsOpen ? (\n          <Modal onClose={closeLightbox}>\n            <Carousel\n              currentIndex={currentImage}\n              views={photos.map((x) => ({\n                ...x,\n                srcset: x.srcSet,\n                caption: x.title,\n              }))}\n            />\n          </Modal>\n        ) : null}\n      </ModalGateway>\n    </>\n  );\n}\n\nGalleryPhoto.defaultProps = {\n  images: [],\n};\n\nGalleryPhoto.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    })\n  ),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport PROJECTS_LIST from \"./helpers/projectsList\";\n\nexport default function Pagination({ currentId }) {\n  const lastProject = PROJECTS_LIST.filter(\n    (p) => p.id === Number(currentId + 1)\n  );\n  const nextProject = PROJECTS_LIST.filter(\n    (p) => p.id === Number(currentId - 1)\n  );\n  return (\n    <div>\n      <Row className=\"justify-content-center mt-5\">\n        <Col xs=\"auto\">\n          {lastProject[0] && (\n            <Link\n              to={`${lastProject[0].path}`}\n              className=\"link-switch-project hvr-sweep-to-left\"\n              smooth=\"true\"\n            >\n              Projet\n              <br />\n              précédent\n            </Link>\n          )}\n          {nextProject[0] && (\n            <Link\n              to={`${nextProject[0].path}`}\n              className=\"link-switch-project hvr-sweep-to-right\"\n              smooth=\"true\"\n            >\n              Projet\n              <br />\n              suivant\n            </Link>\n          )}\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nPagination.defaultProps = {\n  currentId: 0,\n};\n\nPagination.propTypes = {\n  currentId: PropTypes.number,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport parse from \"html-react-parser\";\nimport GalleryPano from \"./GalleryPano\";\nimport GalleryPhoto from \"./GalleryPhoto\";\nimport Pagination from \"./Pagination\";\nimport \"../scss/ProjetDetails.scss\";\n\nexport default function ProjetDetails({ projectDetails }) {\n  const {\n    id,\n    title,\n    year,\n    category,\n    website,\n    tags,\n    description,\n    type,\n    images,\n  } = projectDetails;\n\n  return (\n    <Container className=\"details-projet-container\">\n      <Row>\n        <Col xs=\"auto\">\n          <h1 className=\"title-details-projet\">{title}</h1>\n        </Col>\n      </Row>\n      <Row className=\"text-details-projet justify-content-center\">\n        <Col xs=\"12\" lg=\"7\" className=\"pb-4\">\n          {parse(description)}\n        </Col>\n        <Col xs=\"12\" lg=\"4\" className=\"offset-lg-1\">\n          <Col xs=\"12\" className=\"p-0\">\n            <p>Année : {year}</p>\n          </Col>\n          <Col xs=\"12\" className=\"p-0\">\n            <p>Catégorie : {category}</p>\n          </Col>\n          <Col xs=\"12\" className=\"p-0\">\n            <a href={website.url} className=\"link-unstyled\">\n              {website.name}\n            </a>\n          </Col>\n          <Row className=\"align-items-center mt-4\">\n            {tags.length &&\n              tags.map((t) => (\n                <Col xs=\"auto\" className=\"p-2\" key={t}>\n                  <p className=\"label-stack\">{t}</p>\n                </Col>\n              ))}\n          </Row>\n        </Col>\n      </Row>\n      {type === \"pano\" ? (\n        // <GalleryPano images={images} />\n        <p>RIEN</p>\n      ) : (\n        <GalleryPhoto images={images} />\n      )}\n      <Pagination currentId={id} />\n    </Container>\n  );\n}\n\nProjetDetails.defaultProps = {\n  projectDetails: [],\n};\n\nProjetDetails.propTypes = {\n  projectDetails: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    year: PropTypes.string,\n    category: PropTypes.string,\n    website: PropTypes.shape({\n      name: PropTypes.string,\n      url: PropTypes.string,\n    }),\n    tags: PropTypes.arrayOf(PropTypes.string),\n    description: PropTypes.string,\n    type: PropTypes.string,\n    images: PropTypes.PropTypes.arrayOf(\n      PropTypes.shape({\n        src: PropTypes.string,\n        width: PropTypes.number,\n        height: PropTypes.number,\n      })\n    ),\n  }),\n};\n"],"sourceRoot":""}