{"version":3,"sources":["assets/images/pictos/arrow_Left.svg","assets/images/pictos/arrow_right.svg","components/GalleryPano.js","components/GalleryPhoto.js","components/Pagination.js","components/ProjetDetails.js"],"names":["module","exports","GalleryPano","images","Row","className","map","img","Col","xs","xl","key","uuid","width","height","image","src","pitch","yaw","hfov","showControls","disableKeyboardCtrl","mouseZoom","autoLoad","autoRotate","defaultProps","GalleryPhoto","useState","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","useCallback","event","index","photos","onClick","onClose","currentIndex","views","x","srcset","srcSet","caption","title","Pagination","currentId","refLast","useRef","refNext","lastProject","PROJECTS_LIST","filter","p","id","Number","nextProject","useEffect","playTlPagination","Container","fluid","to","path","ArrowLeft","alt","ref","ArrowRight","ProjetDetails","projectDetails","year","category","website","tags","description","type","url","href","name","md","lg","parse","length","t"],"mappings":"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","file":"static/js/4.f2e6a30d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow_Left.6eab6fa4.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow_right.ff48aaff.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport uuid from \"react-uuid\";\n\nimport { Row, Col } from \"reactstrap\";\nimport { Pannellum } from \"pannellum-react\";\n\nexport default function GalleryPano({ images }) {\n  return (\n    <Row className=\"justify-content-center\">\n      {images.map((img) => (\n        <Col xs=\"10\" xl=\"6\" className=\"p-3\" key={uuid()}>\n          <Pannellum\n            width=\"100%\"\n            height=\"320px\"\n            image={img.src}\n            pitch={0}\n            yaw={img.yaw}\n            hfov={70}\n            showControls={false}\n            disableKeyboardCtrl\n            mouseZoom={false}\n            autoLoad\n            autoRotate={2}\n          />\n        </Col>\n      ))}\n    </Row>\n  );\n}\n\nGalleryPano.defaultProps = {\n  images: [],\n};\n\nGalleryPano.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      yaw: PropTypes.number,\n    })\n  ),\n};\n","import React, { useState, useCallback } from \"react\";\nimport Gallery from \"react-photo-gallery\";\nimport { Row, Col } from \"reactstrap\";\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\nimport PropTypes from \"prop-types\";\n\nexport default function GalleryPhoto({ images }) {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n\n  const openLightbox = useCallback((event, { index }) => {\n    setCurrentImage(index);\n    setViewerIsOpen(true);\n  }, []);\n\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setViewerIsOpen(false);\n  };\n\n  const photos = images.map((img) => {\n    return { src: img.src, width: img.width, height: img.height };\n  });\n\n  return (\n    <Row className=\"justify-content-center\">\n      <Col>\n        <Gallery photos={photos} onClick={openLightbox} />\n        <ModalGateway>\n          {viewerIsOpen ? (\n            <Modal onClose={closeLightbox}>\n              <Carousel\n                currentIndex={currentImage}\n                views={photos.map((x) => ({\n                  ...x,\n                  srcset: x.srcSet,\n                  caption: x.title,\n                }))}\n              />\n            </Modal>\n          ) : null}\n        </ModalGateway>\n      </Col>\n    </Row>\n  );\n}\n\nGalleryPhoto.defaultProps = {\n  images: [],\n};\n\nGalleryPhoto.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    })\n  ),\n};\n","import React, { useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { playTlPagination } from \"../timelines\";\nimport ArrowLeft from \"../assets/images/pictos/arrow_Left.svg\";\nimport ArrowRight from \"../assets/images/pictos/arrow_right.svg\";\n\nimport PROJECTS_LIST from \"./helpers/projectsList\";\nimport \"../scss/Pagination.scss\";\n\nexport default function Pagination({ currentId }) {\n  const refLast = useRef(null);\n  const refNext = useRef(null);\n\n  const lastProject = PROJECTS_LIST.filter(\n    (p) => p.id === Number(currentId + 1)\n  );\n  const nextProject = PROJECTS_LIST.filter(\n    (p) => p.id === Number(currentId - 1)\n  );\n\n  useEffect(() => {\n    playTlPagination(refLast, refNext);\n  }, []);\n\n  return (\n    <Container fluid className=\"pagination-container\">\n      <Row className=\"justify-content-center align-items-center\">\n        {lastProject[0] && (\n          <Link\n            to={`${lastProject[0].path}`}\n            className=\"link-switch-project-left\"\n          >\n            <Col className=\"text-left\">Projet précédent</Col>\n            <Col className=\"d-flex justify-content-start\">\n              <img src={ArrowLeft} alt=\"Arrow Left\" ref={refLast} />\n            </Col>\n          </Link>\n        )}\n        {nextProject[0] && (\n          <Link\n            to={`${nextProject[0].path}`}\n            className=\"link-switch-project-right\"\n          >\n            <Col className=\"d-flex justify-content-end\">\n              <img src={ArrowRight} alt=\"Arrow Right\" ref={refNext} />\n            </Col>\n            <Col className=\"text-left\">Projet suivant</Col>\n          </Link>\n        )}\n      </Row>\n    </Container>\n  );\n}\n\nPagination.defaultProps = {\n  currentId: 0,\n};\n\nPagination.propTypes = {\n  currentId: PropTypes.number,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport parse from \"html-react-parser\";\nimport GalleryPano from \"./GalleryPano\";\nimport GalleryPhoto from \"./GalleryPhoto\";\nimport Pagination from \"./Pagination\";\nimport \"../scss/ProjetDetails.scss\";\n\nexport default function ProjetDetails({ projectDetails }) {\n  const {\n    id,\n    title,\n    year,\n    category,\n    website,\n    tags,\n    description,\n    type,\n    images,\n  } = projectDetails;\n\n  return (\n    <>\n      <Container fluid className=\"all-part-container\">\n        <Container fluid className=\"details-projet\">\n          <Container>\n            <Row className=\"title-details-projet\">\n              <Col xs=\"auto\" className=\"w-100\">\n                <h1>{title}</h1>\n              </Col>\n              <Col xs=\"12\" className=\"p-0\">\n                <p>\n                  {category} - {year}\n                </p>\n              </Col>\n              <Col xs=\"12\">\n                {website.url && (\n                  <a href={website.url} className=\"link-unstyled\">\n                    {website.name}\n                  </a>\n                )}\n              </Col>\n            </Row>\n            <Row className=\"text-details-projet justify-content-center\">\n              <Col xs=\"12\" md=\"10\" lg=\"8\" xl=\"7\">\n                {parse(description)}\n              </Col>\n            </Row>\n            <Row className=\"stack\">\n              {tags.length &&\n                tags.map((t) => (\n                  <Col xs=\"auto\" className=\"p-2\" key={t}>\n                    <p className=\"label-stack\">{t}</p>\n                  </Col>\n                ))}\n            </Row>\n          </Container>\n        </Container>\n        {type ? (\n          <Container className=\"gallery-pano\">\n            <GalleryPano images={images} />\n          </Container>\n        ) : (\n          <Container className=\"gallery-photo\">\n            <GalleryPhoto images={images} />\n          </Container>\n        )}\n\n        <Pagination currentId={id} />\n      </Container>\n    </>\n  );\n}\n\nProjetDetails.defaultProps = {\n  projectDetails: [],\n};\n\nProjetDetails.propTypes = {\n  projectDetails: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    year: PropTypes.string,\n    category: PropTypes.string,\n    website: PropTypes.shape({\n      name: PropTypes.string,\n      url: PropTypes.string,\n    }),\n    tags: PropTypes.arrayOf(PropTypes.string),\n    description: PropTypes.string,\n    type: PropTypes.string,\n    images: PropTypes.PropTypes.arrayOf(\n      PropTypes.shape({\n        src: PropTypes.string,\n        width: PropTypes.number,\n        height: PropTypes.number,\n      })\n    ),\n  }),\n};\n"],"sourceRoot":""}